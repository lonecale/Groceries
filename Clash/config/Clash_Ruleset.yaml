# mihomo 配置
# 日期：2024-10-22 23:00
# 适用版本：适用于使用 mihomo 核心的 OpenClash 等程序。本配置仅含规则以及订阅定义，其它设置请于程序内自行配置。

# HTTP(S) 代理服务器端口
port: 7890
# SOCKS5 代理端口
socks-port: 7891
# 混合端口，HTTP和SOCKS5用一个端口
mixed-port: 7892
# 透明代理端口，用于 Linux 和 MacOS
redir-port: 7893
# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
tproxy-port: 7894

# 允许局域网的连接（可用来共享代理）
allow-lan: true
# 监听IP白名单，可绑定单个IPv4和v6地址，"*" 为绑定所有IP地址，仅在将allow-lan设置为true时适用
bind-address: "*"
# 是否允许内核接受 IPv6 流量
ipv6: false
# 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）/ script (脚本)
mode: rule
# 设置日志输出级别: silent/error/warning/info/debug
log-level: info
# 是否允许 UDP 通过代理，默认为 false
udp: true

# TCP Keep Alive 包的间隔，单位为秒
keep-alive-interval: 600
# TCP Keep Alive 的最大空闲时间
keep-alive-idle: 600
# 禁用 TCP Keep Alive，在 Android 默认为 true
disable-keep-alive: false


# 更改geoip使用文件,mmdb或者dat,可选 true/false,true为dat,此项有默认值 false
geodata-mode: false
# GEO 文件加载模式，standard：标准加载器 memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)
geodata-loader: memconservative
# 自动更新 GEO
geo-auto-update: true
# 更新间隔，单位为小时
geo-update-interval: 24
geox-url:
  geoip: 'https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat'
  geosite: 'https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat'
  mmdb: 'https://github.com/xream/geoip/releases/latest/download/ipinfo.country.mmdb'
  asn: 'https://raw.githubusercontent.com/P3TERX/GeoLite.mmdb/download/GeoLite2-ASN.mmdb'

dns:
  #缓存算法: lru: 最近最少使用 arc: 自适应替换缓存
  cache-algorithm: arc


# 锚点 - 节点订阅的参数 [每12小时更新一次订阅节点，每 300 秒一次健康检查]
NodeParam: &NodeParam {type: http, interval: 42300, health-check: {enable: true, url: 'http://www.apple.com/library/test/success.html', interval: 300}}

# 锚点 - 节点订阅
proxy-providers: 
  机场名称1:
    url: '机场1的订阅URL'
    <<: *NodeParam
    path: './proxy_provider/机场名称1.yaml'
    override:
      additional-prefix: "[机场名称1] " # 为订阅节点添加机场名称前缀
  机场名称2:
    url: '机场2的订阅URL'
    <<: *NodeParam
    path: './proxy_provider/机场名称2.yaml'
    override:
      additional-prefix: "[机场名称2] " # 为订阅节点添加机场名称前缀

# 锚点 - 节点筛选组
FilterZY: &FilterZY '^(?=.*((?i)HKG|Hong Kong|香港 IEPL|香港高级|高级 专线 香港)).*$'
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)标准|回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)))(?!.*((?i)标准|回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))(?!.*((?i)标准|回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|Korea)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)标准|回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)标准|回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUK: &FilterUK '^(?=.*((?i)🇬🇧|英国|伦敦|(\b(UK|United Kingdom)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterFR: &FilterFR '^(?=.*((?i)🇫🇷|法国|(\b(FR|France)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterDE: &FilterDE '^(?=.*((?i)🇩🇪|德国|(\b(DE|Germany)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterGame: &FilterGame '^(?=.*((?i)游戏|🎮|(\b(GAME)\b)))(?!.*((?i)回国|校园)).*$'
FilterStreaming: &FilterStreaming '^(?=.*((?i)🇭🇰|香港|🇹🇼|台湾|🇯🇵|日本|川日|东京|大阪|泉日|埼玉|🇸🇬|新加坡|狮|🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(HK|Hong|TW|Tai|Taiwan|JP|Japan|SG|Singapore|US|United States)\b)))(?!.*((?i)标准|回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterFinal: &FilterFinal '^(?=.*(.))(?!.*((?i)🇭🇰|香港|🇹🇼|台湾|🇯🇵|日本|川日|东京|大阪|泉日|埼玉|🇸🇬|新加坡|狮|🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|🇰🇷|韩国|韓|首尔|🇬🇧|英国|伦敦|🇫🇷|法国|🇩🇪|德国|游戏|🎮|群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(HK|Hong|TW|Tai|Taiwan|JP|Japan|SG|Singapore|US|United States|KR|Korea|UK|United Kingdom|FR|France|DE|Germany|GAME|USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author|Traffic)\b|(\d{4}-\d{2}-\d{2}|\d+G)))).*$'
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author|Traffic)\b|(\d{4}-\d{2}-\d{2}|\d+G)))).*$'

# 锚点 - 策略筛选组
#Select: &Select {type: select, proxies: [节点选择, HK负载均衡, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略，DIRECT]}

# 策略组参数锚点
# 锚点 - 时延优选参数 [每 300 秒一次惰性健康检查，容差 20ms，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, interval: 300, tolerance: 20, lazy: true, url: 'http://www.apple.com/library/test/success.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: false, include-all-providers: true}
# 锚点 - 故障转移参数 [每 300 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
FallBack: &FallBack {type: fallback, interval: 300, lazy: true, url: 'http://www.apple.com/library/test/success.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: false, include-all-providers: true}
# 锚点 - 负载均衡参数 [每 300 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
LoadBalance: &LoadBalance {type: load-balance, interval: 300, lazy: true, url: 'http://www.apple.com/library/test/success.html', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: false, include-all-providers: true}

# 锚点 - 规则参数 [每12小时更新一次订阅规则]
RuleProvidersYaml: &RuleProvidersYaml {type: http, behavior: classical, interval: 42300, format: yaml}

RuleProvidersText: &RuleProvidersText {type: http, behavior: classical, interval: 42300, format: text}

RuleProvidersDomainYaml: &RuleProvidersDomainYaml {type: http, behavior: domain, interval: 42300, format: yaml}

RuleProvidersIpcidrYaml: &RuleProvidersIpcidrYaml {type: http, behavior: ipcidr, interval: 42300, format: yaml}

RuleProvidersDomainMrs: &RuleProvidersDomainMrs {type: http, behavior: domain, interval: 42300, format: mrs}

RuleProvidersIpcidrMrs: &RuleProvidersIpcidrMrs {type: http, behavior: ipcidr, interval: 42300, format: mrs}

# 策略组
proxy-groups: 
  #- {name: 节点选择, type: select, proxies: [手动切换, 自动选择, HK负载均衡, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, DIRECT], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Filter.png}
  - {name: 手动切换, type: select, include-all-providers: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png}
  - {name: 自动选择, <<: *UrlTest, filter: *FilterAll, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png}
  #- {name: HK负载均衡, <<: *LoadBalance, filter: *FilterZY, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Round_Robin.png}
  - {name: HK故障转移, <<: *FallBack, filter: *FilterZY, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available_1.png}
  - {name: ProxyDNS, type: select, proxies: [手动切换, HK故障转移, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, DIRECT], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Server.png}
  - {name: 国际CDN下载, type: select, include-all-providers: true, filter: "(?i)实验性", proxies: [DIRECT, 手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Download.png}
  - {name: 苹果国际服务, type: select, proxies: [手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, 🏷️冷门地区节点, DIRECT], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_1.png}
  - {name: 苹果服务, type: select, proxies: [DIRECT, 手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, 🏷️冷门地区节点], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_2.png}
  - {name: 微软云盘, type: select, proxies: [DIRECT, 手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/OneDrive.png}
  - {name: 微软服务, type: select, proxies: [DIRECT, 手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, 🏷️冷门地区节点], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png}
  - {name: 谷歌推送, type: select, proxies: [手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, DIRECT], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png}
  - {name: 谷歌服务, type: select, proxies: [手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png}
  - {name: 国际电商, type: select, proxies: [手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, 🏷️冷门地区节点, DIRECT], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Amazon.png}
  - {name: Developer, type: select, proxies: [手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, DIRECT], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/GitHub.png}
  - {name: 电报消息, type: select, proxies: [手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png}
  - {name: OpenAi, type: select, include-all-providers: true, filter: *FilterUS, proxies: [手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ChatGPT.png}
  - {name: Speedtest, type: select, proxies: [DIRECT, 手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, 🏷️油管节点, 🏷️奈飞节点, 🏷️Disney节点, 🏷️冷门地区节点], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Speedtest.png}
  - {name: 1Password, type: select, proxies: [DIRECT, 手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略], icon: https://1password.com/img/favicon/apple-touch-icon-v2.png}
  - {name: ESET, type: select, proxies: [DIRECT, 手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略], icon: https://www.eset.com/typo3conf/ext/eset_base/Resources/Public/img/device/apple-touch-icon.png}
  - {name: 油管视频, type: select, proxies: [手动切换, 🏷️油管节点, 🏷️冷门地区节点, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png}
  - {name: 奈飞视频, type: select, proxies: [手动切换, 🏷️奈飞节点, 🏷️冷门地区节点, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png}
  - {name: Disney视频, type: select, proxies: [手动切换, 🏷️Disney节点, 🏷️冷门地区节点, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Disney+.png}
  - {name: 巴哈姆特, type: select, proxies: [台湾策略, 手动切换], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Bahamut.png}
  - {name: TikTok, type: select, include-all-providers: true, filter: "(?i)实验性", proxies: [手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, 🏷️冷门地区节点], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TikTok.png}
  - {name: PikPak, type: select, proxies: [DIRECT, 手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, 🏷️油管节点, 🏷️奈飞节点, 🏷️Disney节点], icon: https://raw.githubusercontent.com/luestr/IconResource/main/App_icon/120px/PikPak.png}
  - {name: EmbyProxy, type: select, proxies: [DIRECT, 手动切换, 🏷️Emby节点, 🏷️冷门地区节点, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Emby.png}
  - {name: 哔哩哔哩东南亚, type: select, include-all-providers: true, filter: "(?i)实验性", proxies: [手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, DIRECT], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/bilibili.png}
  - {name: 哔哩哔哩, type: select, proxies: [DIRECT, 香港策略, 台湾策略], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/bilibili_3.png}
  - {name: 网易音乐, type: select, include-all-providers: true, filter: "(?i)网易|音乐|解锁|Music|NetEase", proxies: [DIRECT], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netease_Music.png}
  - {name: 国内媒体, type: select, proxies: [DIRECT, 香港策略, 台湾策略], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/DomesticMedia.png}
  - {name: 国际媒体, type: select, include-all-providers: true, filter: "(?i)实验性", proxies: [手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, 🏷️油管节点, 🏷️奈飞节点, 🏷️Disney节点, 🏷️冷门地区节点], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ForeignMedia.png}
  - {name: Nintendo, type: select, include-all-providers: true, filter: *FilterGame, proxies: [DIRECT, 手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, 🏷️冷门地区节点], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Nintendo.png}
  - {name: 游戏平台, type: select, include-all-providers: true, filter: *FilterGame, proxies: [DIRECT, 手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, 🏷️冷门地区节点], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png}
  - {name: 全球直连, type: select, proxies: [DIRECT, 手动切换], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Area.png}
  - {name: 广告拦截, type: select, proxies: [REJECT, DIRECT], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Advertising.png}
  - {name: 应用净化, type: select, proxies: [REJECT, DIRECT], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hijacking.png}
  #- {name: 兜底策略, type: select, proxies: [手动切换, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, DIRECT], icon: https://raw.githubusercontent.com/shindgewongxj/WHATSINStash/main/icon/fallback.png}
  - {name: 兜底策略, <<: *FallBack, include-all-providers: false, proxies: [香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, DIRECT], icon: https://raw.githubusercontent.com/shindgewongxj/WHATSINStash/main/icon/fallback.png}

  - {name: 香港策略, type: select, proxies: [⏱香港时延优选策略组, 🚥香港故障转移策略组, 🎛香港负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png}
  - {name: 台湾策略, type: select, proxies: [⏱台湾时延优选策略组, 🚥台湾故障转移策略组, 🎛台湾负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China.png}
  - {name: 日本策略, type: select, proxies: [⏱日本时延优选策略组, 🚥日本故障转移策略组, 🎛日本负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png}
  - {name: 韩国策略, type: select, proxies: [⏱韩国时延优选策略组, 🚥韩国故障转移策略组, 🎛韩国负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Korea.png}
  - {name: 新国策略, type: select, proxies: [⏱新国时延优选策略组, 🚥新国故障转移策略组, 🎛新国负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png}
  - {name: 美国策略, type: select, proxies: [⏱美国时延优选策略组, 🚥美国故障转移策略组, 🎛美国负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png}
  - {name: 英国策略, type: select, proxies: [⏱英国时延优选策略组, 🚥英国故障转移策略组, 🎛英国负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_Kingdom.png}
  - {name: 法国策略, type: select, proxies: [⏱法国时延优选策略组, 🚥法国故障转移策略组, 🎛法国负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/France.png}
  - {name: 德国策略, type: select, proxies: [⏱德国时延优选策略组, 🚥德国故障转移策略组, 🎛德国负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Germany.png}

  - {name: 🏷️油管节点, type: select, include-all-providers: true, filter: *FilterStreaming}
  - {name: 🏷️奈飞节点, type: select, include-all-providers: true, filter: *FilterStreaming}
  - {name: 🏷️Disney节点, type: select, include-all-providers: true, filter: *FilterStreaming}
  - {name: 🏷️Emby节点, type: select, include-all-providers: true, filter: *FilterStreaming}
  - {name: 🏷️冷门地区节点, type: select, include-all-providers: true, filter: *FilterFinal}

# 时延优选策略组
  - {name: ⏱香港时延优选策略组, <<: *UrlTest, filter: *FilterHK}
  - {name: ⏱台湾时延优选策略组, <<: *UrlTest, filter: *FilterTW}
  - {name: ⏱日本时延优选策略组, <<: *UrlTest, filter: *FilterJP}
  - {name: ⏱韩国时延优选策略组, <<: *UrlTest, filter: *FilterKR}
  - {name: ⏱新国时延优选策略组, <<: *UrlTest, filter: *FilterSG}
  - {name: ⏱美国时延优选策略组, <<: *UrlTest, filter: *FilterUS}
  - {name: ⏱英国时延优选策略组, <<: *UrlTest, filter: *FilterUK}
  - {name: ⏱法国时延优选策略组, <<: *UrlTest, filter: *FilterFR}
  - {name: ⏱德国时延优选策略组, <<: *UrlTest, filter: *FilterDE}

# 故障转移策略组
  - {name: 🚥香港故障转移策略组, <<: *FallBack, filter: *FilterHK}
  - {name: 🚥台湾故障转移策略组, <<: *FallBack, filter: *FilterTW}
  - {name: 🚥日本故障转移策略组, <<: *FallBack, filter: *FilterJP}
  - {name: 🚥韩国故障转移策略组, <<: *FallBack, filter: *FilterKR}
  - {name: 🚥新国故障转移策略组, <<: *FallBack, filter: *FilterSG}
  - {name: 🚥美国故障转移策略组, <<: *FallBack, filter: *FilterUS}
  - {name: 🚥英国故障转移策略组, <<: *FallBack, filter: *FilterUK}
  - {name: 🚥法国故障转移策略组, <<: *FallBack, filter: *FilterFR}
  - {name: 🚥德国故障转移策略组, <<: *FallBack, filter: *FilterDE}

# 负载均衡策略组
  - {name: 🎛香港负载均衡策略组, <<: *LoadBalance, filter: *FilterHK}
  - {name: 🎛台湾负载均衡策略组, <<: *LoadBalance, filter: *FilterTW}
  - {name: 🎛日本负载均衡策略组, <<: *LoadBalance, filter: *FilterJP}
  - {name: 🎛韩国负载均衡策略组, <<: *LoadBalance, filter: *FilterKR}
  - {name: 🎛新国负载均衡策略组, <<: *LoadBalance, filter: *FilterSG}
  - {name: 🎛美国负载均衡策略组, <<: *LoadBalance, filter: *FilterUS}
  - {name: 🎛英国负载均衡策略组, <<: *LoadBalance, filter: *FilterUK}
  - {name: 🎛法国负载均衡策略组, <<: *LoadBalance, filter: *FilterFR}
  - {name: 🎛德国负载均衡策略组, <<: *LoadBalance, filter: *FilterDE}

# 订阅规则
rule-providers:
  Lan:
    <<: *RuleProvidersYaml
    path: './ruleset/Lan.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan_No_Resolve.yaml'

  Direct:
    <<: *RuleProvidersYaml
    path: './ruleset/Direct.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Direct/Direct_No_Resolve.yaml'

  BanAD:
    <<: *RuleProvidersText
    path: './ruleset/BanAD.txt'
    url: 'https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list'

  BanProgramAD:
    <<: *RuleProvidersText
    path: './ruleset/BanProgramAD.txt'
    url: 'https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list'

  BlockHttpDNS:
    <<: *RuleProvidersYaml
    path: './ruleset/BlockHttpDNS.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BlockHttpDNS/BlockHttpDNS_No_Resolve.yaml'

  NaSDDNS:
    <<: *RuleProvidersYaml
    path: './ruleset/NaSDDNS.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/NaSDDNS/NaSDDNS_No_Resolve.yaml'

#  PrivateTracker:
#    <<: *RuleProvidersYaml
#    path: './ruleset/PrivateTracker.yaml'
#    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PrivateTracker/PrivateTracker_No_Resolve.yaml'

  category-pt:
    <<: *RuleProvidersDomainYaml
    path: './ruleset/category-pt.yaml'
    url: 'https://raw.githubusercontent.com/ixff/clash-rules/release/category-pt.txt'

#  DNSlist:
#    <<: *RuleProvidersYaml
#    path: './ruleset/DNSlist.yaml'
#    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/DNS/DNS_No_Resolve.yaml'

#  SteamCN:
#    <<: *RuleProvidersYaml
#    path: './ruleset/SteamCN.yaml'
#    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/SteamCN/SteamCN_No_Resolve.yaml'

  ChinaDownloadCDN:
    <<: *RuleProvidersYaml
    path: './ruleset/ChinaDownloadCDN.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/ChinaDownloadCDN.yaml'

  InternationalDownloadCDN:
    <<: *RuleProvidersYaml
    path: './ruleset/InternationalDownloadCDN.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/InternationalDownloadCDN.yaml'

  OpenAI:
    <<: *RuleProvidersYaml
    path: './ruleset/OpenAI.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI_No_Resolve.yaml'

  AI:
    <<: *RuleProvidersYaml
    path: './ruleset/AI.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/AI.yaml'

  Nintendo:
    <<: *RuleProvidersYaml
    path: './ruleset/Nintendo.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Nintendo/Nintendo_No_Resolve.yaml'

  Game:
    <<: *RuleProvidersYaml
    path: './ruleset/Game.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game_No_Resolve.yaml'

  YouTube:
    <<: *RuleProvidersYaml
    path: './ruleset/YouTube.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube_No_Resolve.yaml'

  Netflix:
    <<: *RuleProvidersYaml
    path: './ruleset/Netflix.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix_Classical_No_Resolve.yaml'

  Disney:
    <<: *RuleProvidersYaml
    path: './ruleset/Disney.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney_No_Resolve.yaml'

  Bahamut:
    <<: *RuleProvidersYaml
    path: './ruleset/Bahamut.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bahamut/Bahamut_No_Resolve.yaml'

  TikTok:
    <<: *RuleProvidersYaml
    path: './ruleset/TikTok.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/TikTok.yaml'

  PikPak:
    <<: *RuleProvidersYaml
    path: './ruleset/PikPak.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PikPak/PikPak_No_Resolve.yaml'

  Emby:
    <<: *RuleProvidersYaml
    path: './ruleset/Emby.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Emby/Emby_No_Resolve.yaml'

  Emby_Repcz:
    <<: *RuleProvidersText
    path: './ruleset/Emby_Repcz.txt'
    url: 'https://raw.githubusercontent.com/Repcz/Tool/X/Clash/Rules/Emby.list'

#  Emby_Nebula:
#    <<: *RuleProvidersText
#    path: './ruleset/Emby_Nebula.txt'
#    url: 'https://raw.githubusercontent.com/Pegasus02/Clash_Rules/main/list/Nebula.list'

  Emby_ddgksf2013:
    <<: *RuleProvidersText
    path: './ruleset/Emby_ddgksf2013.txt'
    url: 'https://raw.githubusercontent.com/ddgksf2013/Filter/master/Emby.list'

  BiliBiliIntl:
    <<: *RuleProvidersYaml
    path: './ruleset/BiliBiliIntl.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BiliBiliIntl/BiliBiliIntl_No_Resolve.yaml'

  BiliBili:
    <<: *RuleProvidersYaml
    path: './ruleset/BiliBili.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BiliBili/BiliBili_No_Resolve.yaml'

  NetEaseMusic:
    <<: *RuleProvidersYaml
    path: './ruleset/NetEaseMusic.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/NetEaseMusic/NetEaseMusic_No_Resolve.yaml'

  Speedtest:
    <<: *RuleProvidersYaml
    path: './ruleset/Speedtest.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest_No_Resolve.yaml'

#美国数据中心
  1Password:
    <<: *RuleProvidersYaml
    path: './ruleset/1PasswordUS.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/1PasswordUS.yaml'

#欧盟数据中心
#  1Password:
#    <<: *RuleProvidersYaml
#    path: './ruleset/1PasswordEU.yaml'
#    url: 'https://kelee.one/Tool/Clash/Rule/1PasswordEU.yaml'

#加拿大数据中心
#  1Password:
#    <<: *RuleProvidersYaml
#    path: './ruleset/1PasswordCA.yaml'
#    url: 'https://kelee.one/Tool/Clash/Rule/1PasswordCA.yaml'

  ESET_China:
    <<: *RuleProvidersYaml
    path: './ruleset/ESET_China.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/ESET_China.yaml'

  GitHub:
    <<: *RuleProvidersYaml
    path: './ruleset/GitHub.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub_No_Resolve.yaml'

  GitBook:
    <<: *RuleProvidersYaml
    path: './ruleset/GitBook.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitBook/GitBook_No_Resolve.yaml'

  Docker:
    <<: *RuleProvidersYaml
    path: './ruleset/Docker.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Docker/Docker_No_Resolve.yaml'

  Developer:
    <<: *RuleProvidersYaml
    path: './ruleset/Developer.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Developer/Developer_No_Resolve.yaml'

  GlobalScholar:
    <<: *RuleProvidersYaml
    path: './ruleset/GlobalScholar.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalScholar/GlobalScholar_No_Resolve.yaml'

  AppleProxy:
    <<: *RuleProvidersYaml
    path: './ruleset/AppleProxy.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AppleProxy/AppleProxy.yaml'

  Apple:
    <<: *RuleProvidersYaml
    path: './ruleset/Apple.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical_No_Resolve.yaml'

  OneDrive:
    <<: *RuleProvidersYaml
    path: './ruleset/OneDrive.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OneDrive/OneDrive_No_Resolve.yaml'

  Microsoft:
    <<: *RuleProvidersYaml
    path: './ruleset/Microsoft.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft_No_Resolve.yaml'

  GoogleFCM:
    <<: *RuleProvidersYaml
    path: './ruleset/GoogleFCM.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GoogleFCM/GoogleFCM_No_Resolve.yaml'

#  GoogleCN:
#    <<: *RuleProvidersText
#    path: './ruleset/GoogleCN.txt'
#    url: 'https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list'

  Google:
    <<: *RuleProvidersYaml
    path: './ruleset/Google.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google_No_Resolve.yaml'

  AmazonCN:
    <<: *RuleProvidersYaml
    path: './ruleset/AmazonCN.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AmazonCN/AmazonCN_No_Resolve.yaml'

  Amazon:
    <<: *RuleProvidersYaml
    path: './ruleset/Amazon.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Amazon/Amazon_No_Resolve.yaml'

  eBay:
    <<: *RuleProvidersYaml
    path: './ruleset/eBay.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/eBay/eBay_No_Resolve.yaml'

  Bestbuy:
    <<: *RuleProvidersYaml
    path: './ruleset/Bestbuy.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bestbuy/Bestbuy_No_Resolve.yaml'

  Shopify:
    <<: *RuleProvidersYaml
    path: './ruleset/Shopify.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Shopify/Shopify_No_Resolve.yaml'

  Telegram:
    <<: *RuleProvidersYaml
    path: './ruleset/Telegram.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram_No_Resolve.yaml'

#  Telegram_lodepuly:
#    <<: *RuleProvidersYaml
#    path: './ruleset/Telegram_lodepuly.yaml'
#    url: 'https://kelee.one/Tool/Clash/Rule/Telegram.yaml'

  IPTVMainland:
    <<: *RuleProvidersYaml
    path: './ruleset/IPTVMainland.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/IPTVMainland/IPTVMainland_Classical_No_Resolve.yaml'

  ChinaMedia:
    <<: *RuleProvidersYaml
    path: './ruleset/ChinaMedia.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMedia/ChinaMedia_No_Resolve.yaml'

  GlobalMedia:
    <<: *RuleProvidersYaml
    path: './ruleset/GlobalMedia.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia_Classical_No_Resolve.yaml'

#  geolocation-!cn@cn:
#    <<: *RuleProvidersDomainYaml
#    path: './ruleset/geolocation-!cn@cn.yaml'
#    url: 'https://raw.githubusercontent.com/yuumimi/rules/release/clash/geolocation-!cn@cn.txt'

#  cn@!cn:
#    <<: *RuleProvidersDomainYaml
#    path: './ruleset/cn@!cn.yaml'
#    url: 'https://raw.githubusercontent.com/yuumimi/rules/release/clash/cn@!cn.txt'

#  geolocation-!cn:
#    <<: *RuleProvidersDomainYaml
#    path: './ruleset/geolocation-!cn.yaml'
#    url: 'https://raw.githubusercontent.com/yuumimi/rules/release/clash/geolocation-!cn.txt'

#  cn:
#    <<: *RuleProvidersDomainYaml
#    path: './ruleset/cn.yaml'
#    url: 'https://raw.githubusercontent.com/yuumimi/rules/release/clash/cn.txt'

  ChinaCompanyIp:
    <<: *RuleProvidersText
    path: './ruleset/ChinaCompanyIp.txt'
    url: 'https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list'

  CloudCN:
    <<: *RuleProvidersYaml
    path: './ruleset/CloudCN.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Cloud/CloudCN/CloudCN_No_Resolve.yaml'

  Download:
    <<: *RuleProvidersYaml
    path: './ruleset/Download.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Download/Download_No_Resolve.yaml'


# 规则指向
rules:
  - RULE-SET, Lan, DIRECT
  - RULE-SET, Direct, 全球直连
  - RULE-SET, BanAD, 广告拦截
  - GEOSITE,category-ads-all,广告拦截
  - RULE-SET, BanProgramAD, 应用净化
  - RULE-SET, BlockHttpDNS, 应用净化
  - RULE-SET, NaSDDNS, 全球直连
# Transmission检测地址
  - DOMAIN-SUFFIX,portcheck.transmissionbt.com, 全球直连
  - DOMAIN-SUFFIX,fsm.name, 国际媒体
#  - RULE-SET, PrivateTracker, 全球直连
  - RULE-SET, category-pt, 全球直连
  - RULE-SET, ChinaDownloadCDN, 全球直连
  - RULE-SET, InternationalDownloadCDN, 国际CDN下载
  - RULE-SET, OpenAI, OpenAi
  - RULE-SET, AI, OpenAi
  - RULE-SET, Nintendo, Nintendo
  - RULE-SET, Game, 游戏平台
  - RULE-SET, YouTube, 油管视频
  - RULE-SET, Netflix, 奈飞视频
  - RULE-SET, Disney, Disney视频
  - RULE-SET, Bahamut, 巴哈姆特
  - RULE-SET, TikTok, TikTok
  - DOMAIN-SUFFIX,user.mypikpak.com, 国际媒体
  - DOMAIN-SUFFIX,rcv5-sp.mypikpak.com, 国际媒体
  - DOMAIN-SUFFIX,config.mypikpak.com, 国际媒体
  - DOMAIN-SUFFIX,api-drive.mypikpak.com, 国际媒体
  - DOMAIN-SUFFIX,access.mypikpak.com, 国际媒体
  - DOMAIN-SUFFIX,hubciddata.mypikpak.com, 国际媒体
  - RULE-SET, PikPak, PikPak
  - RULE-SET, Emby, EmbyProxy
  - RULE-SET, Emby_Repcz, EmbyProxy
#  - RULE-SET, Emby_Nebula, EmbyProxy
  - RULE-SET, Emby_ddgksf2013, EmbyProxy
  - RULE-SET, BiliBiliIntl, 哔哩哔哩东南亚
  - RULE-SET, BiliBili, 哔哩哔哩
  - RULE-SET, NetEaseMusic, 网易音乐
  - RULE-SET, Speedtest, Speedtest
  - RULE-SET, 1Password, 1Password
  - RULE-SET, ESET_China, ESET
  - RULE-SET, GitHub, Developer
  - RULE-SET, GitBook, Developer
  - RULE-SET, Docker, Developer
  - RULE-SET, Developer, Developer
  - RULE-SET, GlobalScholar, Developer
  - RULE-SET, AppleProxy, 苹果国际服务
  - RULE-SET, Apple, 苹果服务
  - RULE-SET, OneDrive, 微软云盘
  - RULE-SET, Microsoft, 微软服务
  - RULE-SET, GoogleFCM, 谷歌推送
#  - RULE-SET, GoogleCN, 全球直连
  - RULE-SET, Google, 谷歌服务
  - RULE-SET, AmazonCN, 全球直连
  - RULE-SET, Amazon, 国际电商
  - RULE-SET, eBay, 国际电商
  - RULE-SET, Bestbuy, 国际电商
  - RULE-SET, Shopify, 国际电商
  - RULE-SET, Telegram, 电报消息
#  - RULE-SET, Telegram_lodepuly, 电报消息
  - RULE-SET, IPTVMainland, 国内媒体
  - RULE-SET, ChinaMedia, 国内媒体
  - GEOSITE, category-porn, 国际媒体
  - RULE-SET, GlobalMedia, 国际媒体
#  - RULE-SET, geolocation-!cn@cn, 全球直连
#  - RULE-SET, cn@!cn, 兜底策略
#  - RULE-SET, geolocation-!cn, 兜底策略
  - GEOSITE, geolocation-!cn, 兜底策略
#  - RULE-SET, cn, 全球直连
  - GEOSITE, cn, 全球直连
  - RULE-SET, ChinaCompanyIp, 全球直连
#  - RULE-SET, CloudCN, 全球直连
  - RULE-SET, Download, 全球直连
  - GEOIP, CN, 全球直连
  - MATCH, 兜底策略
